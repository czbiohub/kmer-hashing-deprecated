syntax = 'proto3';

// Keep all of these within the 'kmermidon' namespace
package kmermidon;

message Signature {
    // Human-friendly name of the sample
    string name = 1;

    // Email to contact about the signature
    string email = 2;

    // Input filename for creating the signature
    string filename = 3;

    // Version of hash function used to generate hash values,
    // e.g. '0.murmur64'
    string hash_function = 4;

    // How this signature can be shared, e.g. 'CC0'
    string license = 5;

    // List of protein or DNA sketches in different k-mer sizes
    repeated Sketch sketches = 6;

    // Version of signature, e.g. '0.1'
    string version = 8;
}

message Sketch {
    // k-mer size used to grab signatures and generate hashes
    int ksize = 1;

    // Which molecule was used, either DNA or protein
    Molecule molecule = 2;

    // Total number of hashes
    int total_num_hashes = 3;

    // Random seed used to generate hashes
    int seed = 4;

    // Maximum hash value
    int max_hash = 5;

    // Uniquely identifiable string ID of the signature
    string md5sum = 6;

    // The actual hashes!!
    repeated int hashes = 7;

    // Optional field for abundance of each hash
    repeated int abundances = 8;

    // Type of signature, e.g. 'minhash'
    Method method = 9;
}


enum Molecule {
    DNA = 0;
    PROTEIN = 1;
}


enum Method {
    MINHASH = 0;
    HYPERLOGLOG = 1;
    EXACTJACCARD = 2;
}
